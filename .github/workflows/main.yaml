name: Node.JS CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_run:
    workflows: ["CI/CD"]
    types:
      - completed

jobs:
  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install Dependencies
        run: npm install

      - name: Run Unit Tests
        run: |
          npm run unit

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install Dependencies
        run: npm install

      - name: Run Integration Tests
        run: |
          npm run integration          

  build:
    name: User app
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Only run on push to main branch

    strategy: 
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout 
        uses: actions/checkout@v3 
        with: 
          fetch-depth: 0

      - name: Use Node.JS ${{ matrix.node-version }}
        uses: actions/setup-node@v3 
        with: 
          node-version: ${{ matrix.node-version }}

      - name: NPM install,build
        run: |
          npm install    
              
  # Deploy job to fit render.com
  deploy:
    name: Deploy
    needs: [build,unit-test,integration-test] # Our tests must pass in order to run the deploy job
    runs-on: ubuntu-latest

    steps: 
      # - name: Deploy to production
      #   uses: johnbeynon/render-deploy-action@v0.0.8
      #   with:
      #     service-id: ${{ secrets.SERVICE_ID }} # Can be found as part of the Deploy Hook
      #     api-key: ${{ secrets.RENDER_API_KEY }} # Create your API key in Render Dashboard > Account Settings
      - name: Deploy to prod
        run: |
          echo "code deployed to production"

  #Test job
  test:
    name: E2E tests
    needs: [deploy]
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout Test Repository
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Run tests
        run: |
          npm install
          npm test